

Tab bar icons should be .png files, about 30px square, and should be 24-bit with an alpha channel. All you do is make the image completely transparent except for the part you want to appear as the icon.

You can see some examples here: http://glyphish.com/

//

 
 -(void) requestPermission
 {
 eventStore = [[EKEventStore alloc] init];
 
 [eventStore requestAccessToEntityType:EKEntityTypeEvent
 completion:^(BOOL granted, NSError *error) {
 if (!granted)
 NSLog(@"Access to store not granted");
 }];
 
 
 }
 
 NSDate *startDate = [[NSDate alloc] init];
 NSCalendar *gregorian = [[NSCalendar alloc]
 initWithCalendarIdentifier:NSGregorianCalendar];
 NSDateComponents *offsetComponents = [[NSDateComponents alloc] init];
 [offsetComponents setDay:10];
 NSDate *endDate = [gregorian dateByAddingComponents:offsetComponents
 toDate:startDate options:0];
 NSPredicate *predicate = [eventStore predicateForEventsWithStartDate:startDate endDate:endDate calendars:nil];
 NSArray *events = [eventStore eventsMatchingPredicate:predicate];
 for (EKEvent *event in events)
 {
 NSLog(@"title: %@", event.title);
 
 NSRange range = [event.title rangeOfString:@"kayapp"];
 if (range.length > 0)
 {
 NSLog(@"calendarId: %@",event.calendarItemIdentifier);
 
 NSError *error;
 BOOL success = [eventStore removeEvent:event span:EKSpanFutureEvents commit:YES error:&error];
 if (!success) {
 // Handle failure here, look at error instance
 [AppLog Log:@"failed to remove reminder %@", error.description];
 
 }
 }
 }
 
 
 /*
 EKEvent *event = [EKEvent
 eventWithEventStore:self.eventStore];
 
 NSDateFormatter* formatter = [[NSDateFormatter alloc] init];
 [formatter setDateFormat:@"dd MMM yyyy HH:mm"];
 
 event.title = [[NSString alloc]initWithFormat:@"kayapp %@",booking.KayakName];
 event.calendar = [eventStore defaultCalendarForNewEvents];
 event.startDate = absoluteReminderDate;
 event.endDate   = [[NSDate alloc] initWithTimeInterval:9600 sinceDate:event.startDate]; //2. hours
 event.notes = booking.KayakName;
 
 EKAlarm *alarm = [EKAlarm alarmWithAbsoluteDate:event.startDate];
 
 event.alarms = [NSArray arrayWithObject:alarm];
 
 NSError *error;
 [eventStore saveEvent:event span:EKSpanThisEvent error:&error];
 if (error)
 {
 [AppLog Log:@"error = %@", error, nil];
 }
 
 
